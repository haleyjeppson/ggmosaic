[{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"how-to-use-ggmosaic","dir":"Articles","previous_headings":"","what":"How to use ggmosaic","title":"Mosaic plots with `ggplot2`","text":"fit ggmosaic within ggplot2 framework, must able create formula aesthetics defined call. , aesthetics set formula determines break joint distribution. main hurdle ggmosaic faced mosaic plots one--one mapping variable x y axis. accommodate variable number variables, mapping x created product() function. example, variables var1 var2 read x = product(var2, var1). product() function alludes ggmosaic’s predecessor productplots joint distribution product conditional marginal distributions. product() creates list variables allows pass check_aesthetics(), ggplot2 internal function, splits variables back data frame calculations. geom_mosaic(), following aesthetics can specified: weight: select weighting variable x: select variables add formula declared x = product(var2, var1, ...) alpha: add alpha transparency selected variable unless variable called x, added formula first position fill: select variable filled unless variable called x, added formula first position optional alpha variable. conds : select variable condition declared conds = product(cond1, cond2, ...) values sent repurposed productplots functions create desired formula: weight ~ alpha + fill + x | conds. plot constructed hierarchically, ordering variables formula vital.","code":""},{"path":[]},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"one-variable","dir":"Articles","previous_headings":"Examples","what":"One variable","title":"Mosaic plots with `ggplot2`","text":"","code":"ggplot(data = flights) +   geom_mosaic(aes(x = product(rude_to_recline), fill=rude_to_recline)) +    labs(title='f(rude_to_recline)')"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"two-variables","dir":"Articles","previous_headings":"Examples","what":"Two variables","title":"Mosaic plots with `ggplot2`","text":"","code":"ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline), fill=do_you_recline)) +    labs(title='f(do_you_recline | rude_to_recline) f(rude_to_recline)')"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"conditioning","dir":"Articles","previous_headings":"Examples","what":"Conditioning","title":"Mosaic plots with `ggplot2`","text":"","code":"ggplot(data = flights) +   geom_mosaic(aes(x=product(do_you_recline), fill = do_you_recline,                    conds = product(rude_to_recline))) +   labs(title='f(do_you_recline | rude_to_recline)')"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"alternative-to-conditioning-faceting","dir":"Articles","previous_headings":"Examples","what":"Alternative to conditioning: faceting","title":"Mosaic plots with `ggplot2`","text":"","code":"ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline), fill=do_you_recline), divider = \"vspine\") +   labs(title='f(do_you_recline | rude_to_recline)') +    facet_grid(~rude_to_recline) +   theme(aspect.ratio = 3,         axis.text.x = element_blank(),         axis.ticks.x = element_blank())"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"the-importance-of-ordering","dir":"Articles","previous_headings":"Examples","what":"The importance of ordering","title":"Mosaic plots with `ggplot2`","text":"","code":"order1 <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline), fill = do_you_recline))   order2 <- ggplot(data = flights) +   geom_mosaic(aes(x=product(rude_to_recline, do_you_recline), fill = do_you_recline))     order1 + order2"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"other-features-of-geom_mosaic","dir":"Articles","previous_headings":"","what":"Other features of geom_mosaic()","title":"Mosaic plots with `ggplot2`","text":"Arguments unique geom_mosaic(): divider: used declare type partitions used offset: sets space first spine","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"divider-function-types-of-partitioning","dir":"Articles","previous_headings":"Other features of geom_mosaic()","what":"Divider function: Types of partitioning","title":"Mosaic plots with `ggplot2`","text":"Four options available partition: vspine:  width constant, height varies. hspine:  height constant, width varies. vbar:  height constant, width varies. hbar:  width constant, height varies.","code":"part1 <- ggplot(data = flights) +    geom_mosaic(aes(x=product(do_you_recline), fill = do_you_recline)) +     theme(axis.text = element_blank(),         axis.ticks = element_blank()) +   labs(x=\"\", y = \"\", title = \"hspine\")  part2 <- ggplot(data = flights) +    geom_mosaic(aes(x=product(do_you_recline), fill = do_you_recline),               divider = \"vspine\") +     theme(axis.text = element_blank(),         axis.ticks = element_blank()) +   labs(x=\"\", y = \"\", title = \"vspine\")  part3 <- ggplot(data = flights) +    geom_mosaic(aes(x=product(do_you_recline), fill = do_you_recline),               divider = \"hbar\") +     theme(axis.text = element_blank(),         axis.ticks = element_blank()) +   labs(x=\"\", y = \"\", title = \"hbar\")  part4 <- ggplot(data = flights) +    geom_mosaic(aes(x=product(do_you_recline), fill = do_you_recline),               divider = \"vbar\") +     theme(axis.text = element_blank(),         axis.ticks = element_blank()) +   labs(x=\"\", y = \"\", title = \"vbar\")  part1 + part2 + part3 + part4 + plot_layout(nrow = 1)"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"partitioning-with-one-or-more-variables","dir":"Articles","previous_headings":"Other features of geom_mosaic()","what":"Partitioning with one or more variables","title":"Mosaic plots with `ggplot2`","text":"default use spines alternating directions begins horizontal spine begins vertical spine alternates selects n-1 horizontal spines ends vertical spine e.g. c(\"hspine\", \"vspine\", \"hbar\")","code":"h_mosaic <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=mosaic(\"h\")) +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  v_mosaic <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=mosaic(\"v\"))  +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  doubledecker <- ggplot(data = flights) +   geom_mosaic(aes(x = product(rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=ddecker()) +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  h_mosaic + v_mosaic + doubledecker + plot_layout(nrow = 1) mosaic4 <-  ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=c(\"vspine\", \"vspine\", \"hbar\"))  +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  mosaic5 <-  ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=c(\"hbar\", \"vspine\", \"hbar\"))  +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  mosaic6 <-  ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=c(\"hspine\", \"hspine\", \"hspine\"))  +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  mosaic7 <-  ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, rude_to_recline, eliminate_reclining), fill=do_you_recline), divider=c(\"vspine\", \"vspine\", \"vspine\"))  +   theme(axis.text=element_blank(), axis.ticks=element_blank()) +    labs(x=\"\", y=\"\")  mosaic4 + mosaic5 + mosaic6 + mosaic7 + plot_layout(nrow = 1)"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"adjusting-the-offset","dir":"Articles","previous_headings":"Other features of geom_mosaic()","what":"Adjusting the offset","title":"Mosaic plots with `ggplot2`","text":"ggmosaic adopts procedure followed Hartigan Kleiner, Friendly, Theus Lauer, Hofmann, amount space allocated splits, subsequent divisions receiving smaller amount space. created spaces preserve impact small counts. effect becomes immediately apparent empty group included. case, gaps categories, empty, create empty space. offset: Set space first spine default 0.01 space partitions decreases layers build","code":"offset1 <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, region), fill=do_you_recline)) +    labs(y = \"\", title=\" offset = 0.01\") +   theme(axis.text.y=element_blank(),         axis.ticks.y=element_blank(),         axis.text.x = element_text(angle = 90))  offset0 <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, region), fill=do_you_recline), offset = 0) +    labs(y = \"\", title=\" offset = 0\") +   theme(axis.text.y=element_blank(),         axis.ticks.y=element_blank(),         axis.text.x = element_text(angle = 90))  offset2 <- ggplot(data = flights) +   geom_mosaic(aes(x = product(do_you_recline, region), fill=do_you_recline), offset = 0.02) +    labs(y=\"\",  title=\" offset = 0.02\") +   theme(axis.text.y = element_blank(),         axis.ticks.y=element_blank(),         axis.text.x = element_text(angle = 90),         legend.position = \"right\")  offset0 + offset1 + offset2 + plot_layout(ncol = 3)"},{"path":"https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html","id":"version-compatibility-issues-with-ggplot2","dir":"Articles","previous_headings":"","what":"Version compatibility issues with ggplot2","title":"Mosaic plots with `ggplot2`","text":"Since initial release ggmosaic, ggplot2 evolved considerably. ggplot2 continues evolve, ggmosaic must continue evolve alongside . Although changes affect underlying code general usage ggmosaic, general user may need aware compatibility issues can arise versions. table summarizes compatibility versions.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haley Jeppson. Author, maintainer. Heike Hofmann. Author. Di Cook. Author. Hadley Wickham. Contributor.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jeppson H, Hofmann H, Cook DH (2023). ggmosaic: Mosaic Plots 'ggplot2' Framework. R package version 0.4.0, https://haleyjeppson.github.io/ggmosaic/, https://github.com/haleyjeppson/ggmosaic. Jeppson & Hofmann, \"R Journal: Generalized Mosaic Plots ggplot2 Framework\", R Journal, 2023","code":"@Manual{,   title = {ggmosaic: Mosaic Plots in the 'ggplot2' Framework},   author = {Haley Jeppson and Heike Hofmann and Dianne H. Cook},   year = {2023},   note = {R package version 0.4.0},   url = {https://haleyjeppson.github.io/ggmosaic/, https://github.com/haleyjeppson/ggmosaic}, } @Article{,   title = {The R Journal: Generalized Mosaic Plots in the ggplot2 Framework},   author = {Haley Jeppson and Heike Hofmann},   journal = {The R Journal},   year = {2023},   url = {https://doi.org/10.32614/RJ-2023-013},   doi = {10.32614/RJ-2023-013},   volume = {14},   number = {4},   issn = {2073-4859},   pages = {50-78}, }"},{"path":"https://haleyjeppson.github.io/ggmosaic/index.html","id":"ggmosaic-","dir":"","previous_headings":"","what":"Mosaic Plots in the ggplot2 Framework","title":"Mosaic Plots in the ggplot2 Framework","text":"ggmosaic designed create visualizations categorical data capable producing bar charts, stacked bar charts, mosaic plots, double decker plots.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mosaic Plots in the ggplot2 Framework","text":"can install ggmosaic github :","code":"# install.packages(\"devtools\") devtools::install_github(\"haleyjeppson/ggmosaic\")"},{"path":"https://haleyjeppson.github.io/ggmosaic/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Mosaic Plots in the ggplot2 Framework","text":"","code":"library(ggmosaic) library(dplyr) happy %>%    mutate(finrela = forcats::fct_recode(finrela,     \"far below     \" = \"far below average\",     \"    below\" = \"below average\",     \"average\" = \"average\",     \"above    \" = \"above average\",      \"l\\n   far above\" = \"far above average\")) %>%    ggplot() +   geom_mosaic(aes(x = product(finrela), fill=health), show.legend = FALSE) +   theme_mosaic() +   scale_fill_manual(values = c(\"#4575B4\", \"#ABD9E9\", \"#FEE090\", \"#F46D43\"))"},{"path":"https://haleyjeppson.github.io/ggmosaic/index.html","id":"geom_mosaic-setting-the-aesthetics","dir":"","previous_headings":"","what":"geom_mosaic: setting the aesthetics","title":"Mosaic Plots in the ggplot2 Framework","text":"geom_mosaic(), following aesthetics can specified: weight: select weighting variable x: select variables add formula declared x = product(var2, var1, ...) alpha: add alpha transparency selected variable unless variable called x, added formula first position fill: select variable filled unless variable called x, added formula first position optional alpha variable. conds : select variable condition declared conds = product(cond1, cond2, ...) values sent repurposed productplots functions create desired formula: weight ~ alpha + fill + x | conds.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/index.html","id":"version-compatibility-issues-with-ggplot2","dir":"","previous_headings":"","what":"Version compatibility issues with ggplot2","title":"Mosaic Plots in the ggplot2 Framework","text":"Since initial release ggmosaic, ggplot2 evolved considerably. ggplot2 continues evolve, ggmosaic must continue evolve alongside . Although changes affect underlying code general usage ggmosaic, general user may need aware compatibility issues can arise versions. table summarizes compatibility versions.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/GeomMosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — GeomMosaic","title":"Geom proto — GeomMosaic","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/GeomMosaicJitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — GeomMosaicJitter","title":"Geom proto — GeomMosaicJitter","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/GeomMosaicText.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — GeomMosaicText","title":"Geom proto — GeomMosaicText","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/StatMosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — StatMosaic","title":"Geom proto — StatMosaic","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/StatMosaicJitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — StatMosaicJitter","title":"Geom proto — StatMosaicJitter","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/StatMosaicText.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom proto — StatMosaicText","title":"Geom proto — StatMosaicText","text":"Geom proto","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ddecker.html","id":null,"dir":"Reference","previous_headings":"","what":"Template for a double decker plot. A double decker plot is composed of a sequence of spines in the same direction, with the final spine in the opposite direction. — ddecker","title":"Template for a double decker plot. A double decker plot is composed of a sequence of spines in the same direction, with the final spine in the opposite direction. — ddecker","text":"Template double decker plot. double decker plot composed sequence spines direction, final spine opposite direction.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ddecker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template for a double decker plot. A double decker plot is composed of a sequence of spines in the same direction, with the final spine in the opposite direction. — ddecker","text":"","code":"ddecker(direction = \"h\")"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ddecker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template for a double decker plot. A double decker plot is composed of a sequence of spines in the same direction, with the final spine in the opposite direction. — ddecker","text":"direction direction first split","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/fly.html","id":null,"dir":"Reference","previous_headings":"","what":"Flying Etiquette Survey Data — fly","title":"Flying Etiquette Survey Data — fly","text":"Data results SurveyMonkey survey commissioned FiveThirtyEight story 41 Percent Fliers Say ’s Rude Recline Airplane Seat.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/fly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flying Etiquette Survey Data — fly","text":"","code":"fly"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/fly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flying Etiquette Survey Data — fly","text":"data frame 1040 rows 27 variables: id Respondent ID flight_freq often travel plane? do_you_recline ever recline seat fly? height tall ? has_child_under_18 children 18? three_seats_two_arms n row three seats, get use two arm rests? two_seats_one_arm row two seats, get use middle arm rest? window_shade control window shade? rude_to_move_to_unsold_seat rude move unsold seat plane? rude_to_talk_to_neighbor Generally speaking, rude say words stranger sitting next plane? six_hr_flight_leave_seat six hour flight NYC LA, many times acceptable get aisle seat? reclining_obligation_to_behind normal circumstances, person reclines seat flight obligation person sitting behind ? rude_to_recline rude recline seat plane? eliminate_reclining Given opportunity, eliminate possibility reclining seats planes entirely? rude_to_switch_seats_friends rude ask someone switch seats order closer friends? rude_to_switch_seats_family rude ask someone switch seats order closer family? rude_to_wake_neighbor_bathroom rude wake passenger trying go bathroom? rude_to_wake_neighbor_walk rude wake passenger trying walk around? rude_to_bring_baby general, rude bring baby plane? rude_to_bring_unruly_child general, rude knowingly bring unruly children plane? use_electronics_takeoff ever used personal electronics take landing violation flight attendant's direction? smoked_inflight ever smoked cigarette airplane bathroom rules? gender Gender age Age household_income Household Income education Education region Region","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/fly.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flying Etiquette Survey Data — fly","text":"https://github.com/fivethirtyeight/data/tree/master/flying-etiquette-survey","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Mosaic plots. — geom_mosaic","title":"Mosaic plots. — geom_mosaic","text":"mosaic plot convenient graphical summary conditional distributions contingency table composed spines alternating directions.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mosaic plots. — geom_mosaic","text":"","code":"geom_mosaic(   mapping = NULL,   data = NULL,   stat = \"mosaic\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   offset = 0.01,   show.legend = NA,   inherit.aes = FALSE,   ... )  stat_mosaic_text(   mapping = NULL,   data = NULL,   geom = \"Text\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   show.legend = NA,   inherit.aes = TRUE,   offset = 0.01,   ... )  stat_mosaic(   mapping = NULL,   data = NULL,   geom = \"mosaic\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   show.legend = NA,   inherit.aes = TRUE,   offset = 0.01,   ... )"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mosaic plots. — geom_mosaic","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. divider Divider function. default divider function mosaic() use spines alternating directions. four options partitioning: vspine Vertical spine partition: width constant, height varies. hspine  Horizontal spine partition: height constant, width varies. vbar Vertical bar partition: height constant, width varies. hbar  Horizontal bar partition: width constant, height varies. offset Set space first spine show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat. geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Mosaic plots. — geom_mosaic","text":"x location center rectangle y location center rectangle xmin location bottom left corner xmax location bottom right corner ymin location top left corner ymax location top right corner","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mosaic plots. — geom_mosaic","text":"","code":"data(titanic)  ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class), fill = Survived))  # good practice: use the 'dependent' variable (or most important variable) # as fill variable  # if there is only one variable inside `product()`, # `product()` can be omitted ggplot(data = titanic) +   geom_mosaic(aes(x = Class, fill = Survived))   ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class, Age), fill = Survived))   ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class), conds = product(Age), fill = Survived))   # if there is only one variable inside `product()`, # `product()` can be omitted ggplot(data = titanic) +   geom_mosaic(aes(x = Class, conds = Age, fill = Survived))   ggplot(data = titanic) +   geom_mosaic(aes(x = product(Survived, Class), fill = Age))   # Just excluded for timing. Examples are included in testing to make sure they work if (FALSE) { # \\dontrun{ data(happy)  ggplot(data = happy) + geom_mosaic(aes(x = product(happy)), divider=\"hbar\")  ggplot(data = happy) + geom_mosaic(aes(x = product(happy))) +   coord_flip()  # weighting is important ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(happy)))  ggplot(data = happy) + geom_mosaic(aes(weight=wtssall, x=product(health), fill=happy)) +   theme(axis.text.x=element_text(angle=35))  ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(health), fill=happy), na.rm=TRUE)  ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(health, sex, degree), fill=happy),   na.rm=TRUE)  # here is where a bit more control over the spacing of the bars is helpful: # set labels manually: ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(age), fill=happy), na.rm=TRUE, offset=0) +   scale_x_productlist(\"Age\", labels=c(17+1:72))  # thin out labels manually: labels <- c(17+1:72) labels[labels %% 5 != 0] <- \"\" ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(age), fill=happy), na.rm=TRUE, offset=0) +   scale_x_productlist(\"Age\", labels=labels)  ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(age), fill=happy, conds = product(sex)),   divider=mosaic(\"v\"), na.rm=TRUE, offset=0.001) +   scale_x_productlist(\"Age\", labels=labels)  ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(age), fill=happy), na.rm=TRUE, offset = 0) +   facet_grid(sex~.) +   scale_x_productlist(\"Age\", labels=labels)  ggplot(data = happy) +   geom_mosaic(aes(weight = wtssall, x = product(happy, finrela, health)),   divider=mosaic(\"h\"))  ggplot(data = happy) +   geom_mosaic(aes(weight = wtssall, x = product(happy, finrela, health)), offset=.005)  # Spine example ggplot(data = happy) +  geom_mosaic(aes(weight = wtssall, x = product(health), fill = health)) +  facet_grid(happy~.) } # } # end of don't run"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","title":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","text":"mosaic plat jittered dots","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","text":"","code":"geom_mosaic_jitter(   mapping = NULL,   data = NULL,   stat = \"mosaic_jitter\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   offset = 0.01,   drop_level = FALSE,   seed = NA,   show.legend = NA,   inherit.aes = FALSE,   ... )  stat_mosaic_jitter(   mapping = NULL,   data = NULL,   geom = \"mosaic_jitter\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   show.legend = NA,   inherit.aes = TRUE,   offset = 0.01,   drop_level = FALSE,   seed = NA,   ... )"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. divider Divider function. default divider function mosaic() use spines alternating directions. four options partitioning: vspine Vertical spine partition: width constant, height varies. hspine  Horizontal spine partition: height constant, width varies. vbar Vertical bar partition: height constant, width varies. hbar  Horizontal bar partition: width constant, height varies. offset Set space first spine drop_level Generate points max - 1 level seed Random seed passed set.seed. Defaults NA, means set.seed called. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat. geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_jitter.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","text":"xmin location bottom left corner xmax location bottom right corner ymin location top left corner ymax location top right corner","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jittered dots in Mosaic plots. — geom_mosaic_jitter","text":"","code":"data(titanic)  ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class), fill = Survived), alpha = 0.3) +   geom_mosaic_jitter(aes(x = product(Class), color = Survived))   ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class)), alpha = 0.1) +   geom_mosaic_jitter(aes(x = product(Class), color = Survived), drop_level = TRUE) #> Joining with `by = join_by(x__Class)`   ggplot(data = titanic) +   geom_mosaic(alpha = 0.3, aes(x = product(Class, Sex),  fill = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\")) +   geom_mosaic_jitter(aes(x = product(Class, Sex), color = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\"))    ggplot(data = titanic) +   geom_mosaic(alpha = 0.3, aes(x = product(Class), conds = product(Sex),  fill = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\")) +   geom_mosaic_jitter(aes(x = product(Class), conds = product(Sex), fill = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\"))"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Labeling for Mosaic plots. — geom_mosaic_text","title":"Labeling for Mosaic plots. — geom_mosaic_text","text":"mosaic plot text labels","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labeling for Mosaic plots. — geom_mosaic_text","text":"","code":"geom_mosaic_text(   mapping = NULL,   data = NULL,   stat = \"mosaic\",   position = \"identity\",   na.rm = FALSE,   divider = mosaic(),   offset = 0.01,   show.legend = NA,   inherit.aes = FALSE,   as.label = FALSE,   repel = FALSE,   repel_params = NULL,   check_overlap = FALSE,   ... )"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labeling for Mosaic plots. — geom_mosaic_text","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. divider Divider function. default divider function mosaic() use spines alternating directions. four options partitioning: vspine Vertical spine partition: width constant, height varies. hspine  Horizontal spine partition: height constant, width varies. vbar Vertical bar partition: height constant, width varies. hbar  Horizontal bar partition: width constant, height varies. offset Set space first spine show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). .label Show ggplot label (box round corners) repel Use ggrepel wo labels overlap repel_params List ggrepel parameters (e.g. list(point.padding = 0)) check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_label() geom_text(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/geom_mosaic_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labeling for Mosaic plots. — geom_mosaic_text","text":"","code":"data(titanic)  ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class), fill = Survived)) +   geom_mosaic_text(aes(x = product(Class), fill = Survived))   ggplot(data = titanic) +   geom_mosaic(aes(x = product(Class, Sex),  fill = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\")) +   geom_mosaic_text(aes(x = product(Class, Sex), fill = Survived),               divider = c(\"vspine\", \"hspine\", \"hspine\"), size = 2)   ggplot(data = happy) +   geom_mosaic(aes(x = product(health), fill = happy), na.rm = TRUE, show.legend = FALSE) +   geom_mosaic_text(aes(x = product(happy, health)), na.rm = TRUE)   # avoid overlapping text ggplot(data = happy) +   geom_mosaic(aes(x = product(health), fill = happy), na.rm = TRUE, show.legend = FALSE) +   geom_mosaic_text(aes(x = product(happy, health)), na.rm = TRUE, check_overlap = TRUE)   # or use ggrepel ggplot(data = happy) +   geom_mosaic(aes(x = product(health), fill = happy), na.rm = TRUE, show.legend = FALSE) +   geom_mosaic_text(aes(x = product(happy, health)), na.rm = TRUE, repel = TRUE)   # and as a label ggplot(data = happy) +   geom_mosaic(aes(x = product(health), fill = happy), na.rm = TRUE, show.legend = FALSE) +   geom_mosaic_text(aes(x = product(happy, health)), na.rm = TRUE, repel = TRUE, as.label=TRUE)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ggmosaic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggmosaic: Mosaic Plots in the 'ggplot2' Framework — ggmosaic-package","title":"ggmosaic: Mosaic Plots in the 'ggplot2' Framework — ggmosaic-package","text":"Mosaic plots 'ggplot2' framework. Mosaic plot functionality provided single 'ggplot2' layer calling geom 'mosaic'.","code":""},{"path":[]},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ggmosaic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggmosaic: Mosaic Plots in the 'ggplot2' Framework — ggmosaic-package","text":"Maintainer: Haley Jeppson hjeppson@iastate.edu (ORCID) Authors: Heike Hofmann hofmann@iastate.edu (ORCID) Di Cook dicook@monash.edu (ORCID) contributors: Hadley Wickham hadley@posit.co (ORCID) [contributor]","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ggmosaic_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch shiny app — ggmosaic_app","title":"Launch shiny app — ggmosaic_app","text":"Shiny app \"EDA Mosaic Plots\" interactive exploratory model building","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ggmosaic_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch shiny app — ggmosaic_app","text":"","code":"ggmosaic_app(example = c(\"mosaics\", \"models\"), ...)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/ggmosaic_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch shiny app — ggmosaic_app","text":"example Selected shiny app launch. ... arguments passed .","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/happy.html","id":null,"dir":"Reference","previous_headings":"","what":"Data related to happiness from the general social survey. — happy","title":"Data related to happiness from the general social survey. — happy","text":"data small sample variables related happiness general social survey (GSS). GSS yearly cross-sectional survey Americans, run since 1972. combine data 25 years yield 60 thousand observations, 5,000 variables, select variables related happiness:","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/happy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data related to happiness from the general social survey. — happy","text":"","code":"data(happy)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/happy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data related to happiness from the general social survey. — happy","text":"data frame 62466 rows 11 variables year. year response, 1972 2018. age. age years: 18–89 (89 stands 89 year olds older). degree. highest education: lt high school, high school, junior college, bachelor, graduate. finrela. financial status compared others: far , average, average, average, far . happy. happiness: happy, pretty happy, happy. health. health: excellent, good, fair, poor. marital. marital status:  married, never married, divorced, widowed, separated. sex. sex: female, male. polviews. extremely conservative extremely liberal. partyid. party identification: strong republican, str republican, ind near rep, independent, ind near dem, str democrat, strong democrat, party. wtssall. probability weight. 0.39–8.74","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal bar partition: width constant, height varies. — hbar","title":"Horizontal bar partition: width constant, height varies. — hbar","text":"Horizontal bar partition: width constant, height varies.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal bar partition: width constant, height varies. — hbar","text":"","code":"hbar(data, bounds, offset = 0.02, max = NULL)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal bar partition: width constant, height varies. — hbar","text":"data bounds data frame bounds bounds space partition offset space spines max maximum value","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hspine.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal spine partition: height constant, width varies. — hspine","title":"Horizontal spine partition: height constant, width varies. — hspine","text":"Horizontal spine partition: height constant, width varies.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hspine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal spine partition: height constant, width varies. — hspine","text":"","code":"hspine(data, bounds, offset = offset, max = NULL)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/hspine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal spine partition: height constant, width varies. — hspine","text":"data bounds data frame bounds bounds space partition offset space spines max maximum value","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Template for a mosaic plot. A mosaic plot is composed of spines in alternating directions. — mosaic","title":"Template for a mosaic plot. A mosaic plot is composed of spines in alternating directions. — mosaic","text":"Template mosaic plot. mosaic plot composed spines alternating directions.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template for a mosaic plot. A mosaic plot is composed of spines in alternating directions. — mosaic","text":"","code":"mosaic(direction = \"h\")"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template for a mosaic plot. A mosaic plot is composed of spines in alternating directions. — mosaic","text":"direction direction first split","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/prodcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate frequencies. — prodcalc","title":"Calculate frequencies. — prodcalc","text":"Calculate frequencies.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/prodcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate frequencies. — prodcalc","text":"","code":"prodcalc(   data,   formula,   divider = mosaic(),   cascade = 0,   scale_max = TRUE,   na.rm = FALSE,   offset = offset )"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/prodcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate frequencies. — prodcalc","text":"data input data frame formula formula specifying display plot divider divider function cascade cascading amount, per nested layer scale_max Logical vector length 1. TRUE maximum values within nested layer scaled take available space. FALSE, areas comparable nested layers. na.rm Logical vector length 1 - missing levels silently removed?","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/prodcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate frequencies. — prodcalc","text":"","code":"if (FALSE) { # \\dontrun{ library(productplots) prodcalc(happy, ~ happy, \"hbar\", offset = 0.005) prodcalc(happy, ~ happy, \"hspine\", offset = 0.01) } # }"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/product.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for a list — product","title":"Wrapper for a list — product","text":"Wrapper list","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for a list — product","text":"","code":"product(...)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for a list — product","text":"... Unquoted variables going product plot.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/product.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for a list — product","text":"","code":"data(titanic) ggplot(data = titanic) +   geom_mosaic(aes(x = product(Survived, Class), fill = Survived))"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_type.productlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for determining scales — scale_type.productlist","title":"Helper function for determining scales — scale_type.productlist","text":"Used internally determine class variable x","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_type.productlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for determining scales — scale_type.productlist","text":"","code":"# S3 method for class 'productlist' scale_type(x)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_type.productlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for determining scales — scale_type.productlist","text":"x variable","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_type.productlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for determining scales — scale_type.productlist","text":"character string \"productlist\"","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_x_productlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Determining scales for mosaics — scale_x_productlist","title":"Determining scales for mosaics — scale_x_productlist","text":"Determining scales mosaics","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_x_productlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determining scales for mosaics — scale_x_productlist","text":"","code":"scale_x_productlist(   name = ggplot2::waiver(),   breaks = product_breaks(),   minor_breaks = NULL,   labels = product_labels(),   limits = NULL,   expand = ggplot2::waiver(),   oob = scales::censor,   na.value = NA_real_,   transform = \"identity\",   position = \"bottom\",   sec.axis = ggplot2::waiver() )  scale_y_productlist(   name = ggplot2::waiver(),   breaks = product_breaks(),   minor_breaks = NULL,   labels = product_labels(),   limits = NULL,   expand = ggplot2::waiver(),   oob = scales::censor,   na.value = NA_real_,   transform = \"identity\",   position = \"left\",   sec.axis = ggplot2::waiver() )  ScaleContinuousProduct"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_x_productlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Determining scales for mosaics — scale_x_productlist","text":"object class ScaleContinuousProduct (inherits ScaleContinuousPosition, ScaleContinuous, Scale, ggproto, gg) length 5.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/scale_x_productlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determining scales for mosaics — scale_x_productlist","text":"name set pseudo waiver function product_names default. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Note position scales, limits provided scale expansion. Also accepts rlang lambda function notation. minor_breaks One : NULL minor breaks waiver() default breaks (one minor break major break) numeric vector positions function given limits returns vector minor breaks. Also accepts rlang lambda function notation. function two arguments, given limits major breaks. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. oob One : Function handles limits outside scale limits (bounds). Also accepts rlang lambda function notation. default (scales::censor()) replaces bounds values NA. scales::squish() squishing bounds values range. scales::squish_infinite() squishing infinite values range. na.value Missing values replaced value. transform continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called transform_<name>. transformations require arguments, can call scales package, e.g. scales::transform_boxcox(p = 2). can create transformation scales::new_transform(). position position scales, position axis. left right y axes, top bottom x axes. sec.axis specify secondary axis","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/spine.html","id":null,"dir":"Reference","previous_headings":"","what":"Spine partition: divide longest dimension. — spine","title":"Spine partition: divide longest dimension. — spine","text":"Spine partition: divide longest dimension.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/spine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spine partition: divide longest dimension. — spine","text":"","code":"spine(data, bounds, offset = offset, max = NULL)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/spine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spine partition: divide longest dimension. — spine","text":"data bounds data frame bounds bounds space partition offset space spines max maximum value","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/squeeze.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function — squeeze","title":"Internal helper function — squeeze","text":"Squeeze pieces lie within specified bounds; directly copied package productplots","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/squeeze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function — squeeze","text":"","code":"squeeze(pieces, bounds = bound())"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/squeeze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function — squeeze","text":"pieces rectangle specified via l(eft), r(ight), b(ottom), t(op) bounds rectangle specified via l(eft), r(ight), b(ottom), t(op)","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/squeeze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function — squeeze","text":"re-scaled values piece according boundaries given bounds","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/squeeze.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal helper function — squeeze","text":"Hadley Wickham","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/theme_mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for mosaic plots — theme_mosaic","title":"Theme for mosaic plots — theme_mosaic","text":"Themes set general aspect plot colour background, gridlines, size colour fonts. theme_mosaic provides access regular ggplot2 theme, removes background, gridlines, ensures aspect ratio 1 better viewing mosaics.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/theme_mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for mosaic plots — theme_mosaic","text":"base_size base font size base_family base font family","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/theme_mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for mosaic plots — theme_mosaic","text":"","code":"library(ggmosaic) data(happy) ggplot(data = happy) +   geom_mosaic(aes(weight=wtssall, x=product(health), fill=happy), na.rm=TRUE) +   theme_mosaic()"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/titanic.html","id":null,"dir":"Reference","previous_headings":"","what":"Passengers and crew on board the Titanic — titanic","title":"Passengers and crew on board the Titanic — titanic","text":"dataset containing demographics survival people board Titanic","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/titanic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passengers and crew on board the Titanic — titanic","text":"","code":"titanic"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/titanic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Passengers and crew on board the Titanic — titanic","text":"data frame 2201 rows 4 variables: Class factor variable containing class passenger (1st, 2nd, 3rd) crew. Sex Male/Female. Age Child/Adult. information reliable, inferred boarding documents state actual age years. Survived Yes/.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical bar partition: height constant, width varies. — vbar","title":"Vertical bar partition: height constant, width varies. — vbar","text":"Vertical bar partition: height constant, width varies.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical bar partition: height constant, width varies. — vbar","text":"","code":"vbar(data, bounds, offset = 0.02, max = NULL)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical bar partition: height constant, width varies. — vbar","text":"data bounds data frame bounds bounds space partition offset space spines max maximum value","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vspine.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical spine partition: width constant, height varies. — vspine","title":"Vertical spine partition: width constant, height varies. — vspine","text":"Vertical spine partition: width constant, height varies.","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vspine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical spine partition: width constant, height varies. — vspine","text":"","code":"vspine(data, bounds, offset = offset, max = NULL)"},{"path":"https://haleyjeppson.github.io/ggmosaic/reference/vspine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical spine partition: width constant, height varies. — vspine","text":"data bounds data frame bounds bounds space partition offset space spines max maximum value","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/news/index.html","id":"ggmosaic-034","dir":"Changelog","previous_headings":"","what":"ggmosaic 0.3.4","title":"ggmosaic 0.3.4","text":"updated compatible ggplot2 3.5.0","code":""},{"path":"https://haleyjeppson.github.io/ggmosaic/news/index.html","id":"ggmosaic-033","dir":"Changelog","previous_headings":"","what":"ggmosaic 0.3.3","title":"ggmosaic 0.3.3","text":"CRAN release: 2021-02-23 geom, geom_mosaic_jitter(), associated stat, stat_mosaic_jitter(), added. geom, geom_mosaic_text(), associated stat, stat_mosaic_text(), added. geom_mosaic_text() now supports using labels ggrepel (@gregeleu, #50). theme mosaic plots, theme_mosaic(), added.","code":""},{"path":[]},{"path":"https://haleyjeppson.github.io/ggmosaic/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ggmosaic 0.3.0","text":"ggmosaic 0.3.0 now compatible ggplot2 3.3.0 tidyr 1.0.0.","code":""}]
